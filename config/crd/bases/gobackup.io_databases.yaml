---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: databases.gobackup.io
spec:
  group: gobackup.io
  names:
    kind: Database
    listKind: DatabaseList
    plural: databases
    shortNames:
    - db
    singular: database
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Database is the Schema for the databases API
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            properties:
              type:
                type: string
                enum:
                  - postgresql
                  - redis
              config:
                type: object
                properties:
                  # Common fields
                  host:
                    type: string
                    description: "Database or Redis server host. Default for PostgreSQL: localhost, for Redis: 127.0.0.1"
                  port:
                    type: integer
                    description: "Database or Redis server port. Default for PostgreSQL: 5432, for Redis: 6379"
                  socket:
                    type: string
                    description: |
                      Database or Redis server socket.
                      For PostgreSQL: e.g. /var/run/postgresql/.s.PGSQL.5432
                      For Redis: e.g. /var/run/redis/redis.sock
                      Default: ""
                  password:
                    type: string
                    description: 'Password for the database or Redis server. Default for Redis: ""'
                  args:
                    type: string
                    description: |
                      Additional arguments for pg_dump (PostgreSQL) or redis-cli utility (Redis).
                      For Redis, e.g.: --tls --cacert redis_ca.pem
                  # PostgreSQL-specific fields
                  database:
                    type: string
                    description: Database name (PostgreSQL)
                  username:
                    type: string
                    description: "Username for the database (PostgreSQL). Default: root"
                  tables:
                    type: array
                    description: Array of tables to backup (PostgreSQL)
                    items:
                      type: string
                    default: []
                  exclude_tables:
                    type: array
                    description: Array of tables to exclude from backup (PostgreSQL)
                    items:
                      type: string
                    default: []
                  # Redis-specific fields
                  mode:
                    type: string
                    description: "Redis dump mode. Default: copy"
                    enum: [copy, sync]
                  sync:
                    type: boolean
                    description: For remote Redis server use sync to export
                  copy:
                    type: boolean
                    description: For local Redis server use copy, just copy Redis dump.db
                  invoke_save:
                    type: boolean
                    description: "Invoke save before backup (Redis). Default: true"
                  rdb_path:
                    type: string
                    description: "Path to dump.rdb for Redis. Default: /var/lib/redis/dump.rdb"
                  args_redis:
                    type: string
                    description: "Additional options for redis-cli utility, for example: --tls --cacert redis_ca.pem"
            required:
              - type
              - config
            oneOf:
              - properties:
                  type:
                    enum:
                      - postgresql
              - properties:
                  type:
                    enum:
                      - redis
    served: true
    storage: true
    subresources:
      status: {}
